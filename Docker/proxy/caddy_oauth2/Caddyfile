{
        http_port 80
        https_port 443
        # debug

        order authenticate before respond
        order authorize before basicauth

        security {
                oauth identity provider github  {GITHUB_CLIENT_ID} {GITHUB_CLIENT_SECRET}

                authentication portal myportal {
                        crypto default token lifetime 3600
                        crypto key sign-verify {env.JWT_SHARED_KEY}
                        cookie domain <DNS_NAME>
                        enable identity provider github
                        ui {
                                links {
                                        "My Identity" "/whoami" icon "las la-user"
                                }
                        }

                        transform user {
                                match realm github
                                action add role authp/user
                                ui link "WebServiceClum2025" <DNS_NAME> icon "las la-star"
                        }

                }

                authorization policy mypolicy {
                        set auth url {AUTH_URL}
                        crypto key verify {env.JWT_SHARED_KEY}
                        allow roles authp/user
                        validate bearer header
                        inject headers with claims
                }
        }
}


<DNS_NAME> {
    # Caddy will automatically provision a Let's Encrypt certificate for test.org

    # A. Authentication Portal Handler (Handles /auth, /auth/login, /auth/callback, etc.)
    # The portal must be accessible here to handle redirects from the policy.
    handle /auth* {
        authenticate with myportal
    }

    # B. Protected Webservice Handler (Protects the main application content on the root path)
    handle / {
        # Apply the authorization policy to protect this resource
        authorize with mypolicy


        # If this is a backend service, you would use:
         reverse_proxy <WEBSERVICE_IP>
    }
}
